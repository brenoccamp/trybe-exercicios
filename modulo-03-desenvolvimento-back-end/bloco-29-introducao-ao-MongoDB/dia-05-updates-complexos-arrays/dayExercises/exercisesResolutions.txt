ðŸš€ ExercÃ­cio 1: Adicione a categoria "superhero" ao filme Batman.
R: Query -> db.movies.updateOne(
  { title: 'Batman' },
  { $push: { category: 'superhero' } }
);


ExercÃ­cio 2: Utilizando o modificador $each, adicione as categorias "villain" e "comic-based" ao filme Batman.
R: Query -> db.movies.updateOne(
  { title: 'Batman' },
  { $push: { category: {
    $each: ['villain', 'comic-based']
  } } }
);


ðŸš€ ExercÃ­cio 3: Remova a categoria "action" do filme Batman.
R: Query -> db.movies.updateOne(
  { title: 'Batman' },
  { $pull: { category: 'action' } }
);


ðŸš€ ExercÃ­cio 4: Remova o primeiro elemento do array category do filme Batman.
R: Query -> db.movies.updateOne(
  { title: 'Batman' },
  { $pop: { category: -1 } }
);



ðŸš€ ExercÃ­cio 5: Remova o Ãºltimo elemento do array category do filme Batman.
R: Query -> db.movies.updateOne(
  { title: 'Batman' },
  { $pop: { category: 1 } }
);



ðŸš€ ExercÃ­cio 6: Adicione o elemento "action" ao array category do filme Batman, garantindo que esse valor nÃ£o se duplique.
R: Query -> db.movies.updateOne(
  { title: 'Batman' },
  { $addToSet: { category: 'action' } }
);


ExercÃ­cio 7: Adicione a categoria "90's" aos filmes Batman e Home Alone.
R: Query -> db.movies.updateMany(
  { title: { $in: ['Batman', 'Home Alone'] } },
  { $addToSet: { category: '90\'s' } }
);


ExercÃ­cio 8: Crie um array de documentos chamado cast para o filme Home Alone com os seguintes dados:
--> {"actor": "Macaulay Culkin", "character": "Kevin"}, {"actor": "Joe Pesci", "character": "Harry"}, {"actor": "Daniel Stern"} <--
R: Query -> db.movies.updateMany(
  { title: 'Home Alone' },
  { $set: { cast: [
    { actor: 'Macaulay Culkin', character: 'Kevin' },
    { actor: 'Joe Pesci', character: 'Harry' },
    { actor: 'Daniel Stern' }
  ] } }
);


ðŸš€ ExercÃ­cio 9: Adicione o campo character com o valor Marv ao array de cast em que o campo actor seja igual a Daniel Stern no filme Home Alone. Dica: Leia aqui(https://www.mongodb.com/docs/manual/reference/operator/update/positional/) sobre o operador $.
R: Query -> db.movies.updateMany(
  { title: 'Home Alone' },
  { $set: { 'cast.$[element].character': 'Marv' } },
  { arrayFilters: [{ 'element.actor': 'Daniel Stern'}]}
);


ðŸš€ ExercÃ­cio 10: Crie um array de documentos chamado cast para o filme Batman com os seguintes dados:
--> {"character": "Batman"}, {"character": "Alfred"}, {"character": "Coringa"} <--
R: Query -> db.movies.updateMany(
  { title: 'Batman' },
  { $set: { cast: [
    { character: 'Batman' },
    { character: 'Alfred' },
    { character: 'Coringa' }
  ] } },
);


ExercÃ­cio 11: Produza trÃªs querys para o filme Batman:
Adicione o campo actor, que deve ser um array com o valor Christian Bale, ao array de cast em que o campo character seja igual a Batman;
Adicione o campo actor, que deve ser um array com o valor Michael Caine, ao array de cast em que o campo character seja igual a Alfred;
Adicione o campo actor, que deve ser um array com o valor Heath Ledger, ao array de cast em que o campo character seja igual a Coringa.
Dica: Leia aqui(https://www.mongodb.com/docs/manual/reference/operator/update/positional/) sobre o operador $.
R: Query -> db.movies.updateMany(
  { title: 'Batman' },
  { $set: {
    'cast.$[batman].actor': ['Christian Bale'],
    'cast.$[alfred].actor': ['Michael Caine'],
    'cast.$[coringa].actor': ['Heath Ledger']
  } },
  { arrayFilters: [
    { 'batman.character': 'Batman' },
    { 'alfred.character': 'Alfred' },
    { 'coringa.character': 'Coringa' },
  ] }
);


ðŸš€ ExercÃ­cio 12: Adicione aos atores de cast do character Batman do filme Batman os valores "Michael Keaton", "Val Kilmer" e "George Clooney", e deixe o array em ordem alfabÃ©tica.
Dica: Leia aqui(https://www.mongodb.com/docs/manual/reference/operator/update/positional/) sobre o operador $.
R: Query -> db.movies.updateMany(
  { title: 'Batman' },
  { $push: {
    'cast.$[batman].actor': {
      $each: ['Michael Keaton', 'Val Kilmer', 'George Clooney']
    },
  } },
  { arrayFilters: [
    { 'batman.character': 'Batman' },
  ] }
);



