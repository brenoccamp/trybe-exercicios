1- Utilizando o operador $all, retorne todos os filmes que contenham action e adventure no array category.
R: Query -> db.movies.find({
  category: { $all: ['action', 'adventure'] }
});

ðŸš€ 2- Agora retorne os filmes que contenham action e sci-fi no array category e possuem nota do IMDB maior do que 7.
R: Query -> db.movies.find({
  category: { $all: ['action', 'sci-fi'] },
  imdbRating: { $gt: 7 }
});

3- Retorne todos os filmes com ratings maior do que 103, exibindo apenas os campos title e ratings.
R: Query -> db.movies.find({
  ratings: { $elemMatch: { $gt: 103 } }
}, {
  title: true,
  ratings: true,
  _id: false,
});

ðŸš€ 4- Retorne todos os filmes com ratings entre 100 e 105, exibindo apenas os campos title e ratings.
R: Query -> db.movies.find({
  ratings: { $elemMatch: { $gt: 100, $lt: 105 } }
}, {
  title: true,
  ratings: true,
  _id: false,
});

ðŸš€ 5- Retorne todos os filmes com ratings entre 64 e 105 e divisÃ­veis por 9, exibindo apenas os campos title e ratings.
R: Query -> db.movies.find({
  ratings: { $elemMatch: {
    $gt: 64, $lt: 105, $mod: [9, 0]
  } }
}, {
  title: true,
  ratings: true,
  _id: false,
});

6- Retorne os filmes da categoria adventure e com ratings maior do que 103, exibindo apenas os campos title, ratings e category.
R: Query -> db.movies.find({
  category: { $all: ['adventure'] },
  ratings: { $elemMatch: { $gt: 103 } }
}, {
  title: true,
  ratings: true,
  category: true,
  _id: false,
});

7- Retorne somente o tÃ­tulo de todos os filmes com dois elementos no array category.
R: Query -> db.movies.find({
  category: { $size: 2},
}, {
  title: true,
  _id: false,
});

ðŸš€ 8- Retorne somente o tÃ­tulo de todos os filmes com quatro elementos no array ratings.
R: Query -> db.movies.find({
  ratings: { $size: 4},
}, {
  title: true,
  _id: false,
});

9 - Busque os filmes em que o mÃ³dulo 5 do campo budget seja 0 e que o array category tenha tamanho 2.
R: Query -> db.movies.find({
  budget: { $mod: [5, 0] },
  category: { $size: 2 }
});

ðŸš€ 10 - Retorne os filmes da categoria "sci-fi" ou que possua o ratings maior do que 199, exibindo apenas os campos title, ratings e category.
R: Query -> db.movies.find({
  $or: [
    { category: 'sci-fi' },
    { ratings: { $elemMatch: { $gt: 199 } } }
  ]
}, {
  title: true,
  ratings: true,
  cateogry: true,
  _id: false,
});

11 - Retorne os filmes em que o ratings possua tamanho 4 e que seja da category "adventure" ou "family", mas que nÃ£o tenha o imdbRating menor que 7.
R: Query -> db.movies.find({
  category: { $in: ['adventure', 'family'] },
  ratings: { $size: 4 },
  imdbRating: { $gt: 7 },
}, {
  title: true,
  ratings: true,
  category: true,
  _id: false,
});

ðŸš€ 12 - Utilizando o operador $regex, retorne todos os filmes em que a descriÃ§Ã£o comece com a palavra "The".
R: Query -> db.movies.find({
  description: { $regex: /^The/i }
});

13 - Utilizando o operador $regex, retorne todos os filmes em que a descriÃ§Ã£o termine com a palavra "humanity.".
R: Query -> db.movies.find({
  description: { $regex: /humanity.$/i }
});
