ğŸš€ ExercÃ­cio 1: Inspecione um documento para que vocÃª se familiarize com a estrutura. Entenda os atributos e os nÃ­veis existentes.


ğŸš€ ExercÃ­cio 2: Selecione todos os super-herÃ³is com menos de 1.80m de altura. Lembre-se de que essa informaÃ§Ã£o estÃ¡ em centÃ­metros.
R: Query -> db.superheroes.find({
  'aspects.height': { $lt: 180 }
}).sort({ 'aspects.height': -1 }).toArray();

ğŸš€ ExercÃ­cio 3: Retorne o total de super-herÃ³is menores que 1.80m.
R: Query -> db.superheroes.find({
  'aspects.height': { $lt: 180 }
}).count();

ExercÃ­cio 4: Retorne o total de super-herÃ³is com atÃ© 1.80m.
R: Query -> db.superheroes.find({
  'aspects.height': { $lte: 180 }
}).count();

ExercÃ­cio 5: Selecione um super-herÃ³i com 2.00m ou mais de altura.
R: Query -> db.superheroes.findOne({
  'aspects.height': { $gte: 200 }
});

ExercÃ­cio 6: Retorne o total de super-herÃ³is com 2.00m ou mais.
R: Query -> db.superheroes.find({
  'aspects.height': { $gte: 200 }
}).count();

ExercÃ­cio 7: Selecione todos os super-herÃ³is que tÃªm olhos verdes.
R: Query -> db.superheroes.find({
  'aspects.eyeColor': 'green'
});

ExercÃ­cio 8: Retorne o total de super-herÃ³is com olhos azuis.
R: Query -> db.superheroes.find({
  'aspects.eyeColor': 'blue'
}).count();

ğŸš€ ExercÃ­cio 9: Utilizando o operador $in, selecione todos os super-herÃ³is com cabelos pretos ou carecas ("No Hair").
R: Query -> db.superheroes.find({
  'aspects.hairColor': { $in: ['Black', 'black', 'Black / Blue', 'No Hair']}
});

ExercÃ­cio 10: Retorne o total de super-herÃ³is com cabelos pretos ou carecas ("No Hair").
R: Query -> db.superheroes.find({
  'aspects.hairColor': { $in: ['Black', 'black', 'Black / Blue', 'No Hair']}
}).count();

ExercÃ­cio 11: Retorne o total de super-herÃ³is que nÃ£o tenham cabelos pretos ou nÃ£o sejam carecas.
R: Query -> db.superheroes.find({
  'aspects.hairColor': {
    $nin: [
      'Black',
      'black',
      'Black / Blue',
      'No Hair'
    ]
  }
}).toArray();

ğŸš€ ExercÃ­cio 12: Utilizando o operador $not, retorne o total de super-herÃ³is que nÃ£o tenham mais de 1.80m de altura.
R: Query -> db.superheroes.find({
  'aspects.height': {
    $not : { $gt: 180 }
  }
}).sort({ 'aspects.height': -1 }).toArray();

ExercÃ­cio 13: Selecione todos os super-herÃ³is que nÃ£o sejam humanos nem sejam maiores do que 1.80m.
R: Query -> db.superheroes.find({
  $and: [
    { race: { $ne: 'Human' } },
    { 'aspects.height': { $not: { $gt: 180 } } }
  ]
}).sort({ 'aspects.height': -1 }).toArray();

ExercÃ­cio 14: Selecione todos os super-herÃ³is com 1.80m ou 2.00m de altura e que sejam publicados pela Marvel Comics.
R: Query -> db.superheroes.find({
  $and: [
    { 'aspects.height': { $in: [180, 200] } },
    { publisher: 'Marvel Comics' }
  ]
}).sort({ 'aspects.height': -1 }).toArray();

ExercÃ­cio 15: Selecione todos os super-herÃ³is que pesem entre 80kg e 100kg, sejam Humanos ou Mutantes e nÃ£o sejam publicados pela DC Comics.
R: Query -> db.superheroes.find({
  $and: [
    { 'aspects.weight': { $gt: 80, $lt: 100 } },
    { publisher: { $ne: 'DC Comics' } },
    { race: { $in: ['Human', 'Mutant' ] } }
  ]
}).sort({ 'aspects.weight': -1 }).toArray();

ExercÃ­cio 16: Retorne o total de documentos que nÃ£o contÃªm o campo race.
R: Query -> db.superheroes.find({
  race: null
}).count();
// OU //
db.superheroes.find({
  race: { $exists: false }
}).count();

ExercÃ­cio 17: Retorne o total de documentos que contÃªm o campo hairColor.
R: Query -> db.superheroes.find({
  'aspects.hairColor': { $exists: true }
}).count();

ExercÃ­cio 18: Remova apenas um documento publicado pela Sony Pictures.
R: Query -> db.superheroes.deleteOne({
  publisher: 'Sony Pictures'
});

ğŸš€ ExercÃ­cio 19: Remova todos os documentos publicados pelo George Lucas.
R: Query -> db.superheroes.deleteMany({
  publisher: 'George Lucas'
});
